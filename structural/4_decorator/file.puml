@startuml
namespace decorator {
    class Options << (S,Aquamarine) >> {
        - checkTypo bool
        - checkDirtyWords bool

    }
    interface Processor  {
        + Process( []byte) ([]byte, error)

    }
    class articleProcessor << (S,Aquamarine) >> {
        - processors []Processor
        - opts Options

        + Process(dat []byte) ([]byte, error)

    }
    class checkDirtyWordsProcessor << (S,Aquamarine) >> {
        + Process(dat []byte) ([]byte, error)

    }
    class checkTypoProcessor << (S,Aquamarine) >> {
        + Process(dat []byte) ([]byte, error)

    }
    class nohateArticleProcessor << (S,Aquamarine) >> {
        - base Processor

        - hasHateWords(dat []byte) bool

        + Process(dat []byte) ([]byte, error)

    }
}

"decorator.Processor" <|-- "decorator.articleProcessor"
"decorator.Processor" <|-- "decorator.checkDirtyWordsProcessor"
"decorator.Processor" <|-- "decorator.checkTypoProcessor"
"decorator.articleProcessor" .left.> "decorator.checkDirtyWordsProcessor"
"decorator.articleProcessor" .right.> "decorator.checkTypoProcessor"
"decorator.articleProcessor" -down-> "decorator.Options"

"decorator.Processor" <|-- "decorator.nohateArticleProcessor"
"decorator.nohateArticleProcessor" .up.> "decorator.articleProcessor"

@enduml
